##########################################################################
### System config ########################################################
# Port
server.port=8080

# White label
server.error.whitelabel.enabled=true

# base url
# server.servlet.context-path=/base_url

########################################################################
### Log ###############################################################
# Log
logging.file.name=./log/blog.log

# OFF > FATAL > ERROR > WARN > INFO >DEBUG > TRACE
logging.level.root=INFO

########################################################################
### Servlet ############################################################
# servlet
#server.servlet.context-parameters.secretinformation=Hamit Mizrak

# proje path
# server.servlet.context-path=/yoladi/

########################################################################
### Swagger ############################################################
# swagger open api 3.0
# http://localhost:8080/swagger-ui.html
# http://localhost:8080/v3/api-docs/
# http://localhost:8080/api-docs/
 springdoc.api-docs.path=/api-docs
 springdoc.swagger-ui.path=/swagger-ui-custom.html


########################################################################
### Thymeleaf ##########################################################
# Thymeleaf
spring.thymeleaf.enabled=true


########################################################################
### Security ##########################################################
# JWT
jwt.secret=rouvsen
#jwt.tokenvalidity=2592000




########################################################################
### Database  ########################################################
# jpa > none=yok
# create      =Veritaban?nda yeni tablolar olu?turur. Bu özellik, veritaban?nda var olan tablolar? siler ve yeniden olu?turur. Bu nedenle, veri kayb?na neden olabilir,
# create-drop =Veritaban?nda yeni tablolar olu?turur ve uygulama sonland???nda tablolar? siler. Bu özellik, test amaçl? kullan?labilir, ancak üretim ortam?nda kullanmak için uygun de?ildir,
# update      =Veritaban?ndaki tablolar? do?rular ve gerekti?i gibi günceller. Bu özellik, veritaban?nda var olan tablolar? de?i?tirebilir veya yeni sütunlar veya tablolar olu?turabilir. Veri kayb?na neden olmaz, ancak var olan verileri de?i?tirebilir,
# validate    =Veritaban?ndaki tablolar?n yap?lar?n? do?rular. Bu özellikle veritaban? tablolar?n? yeniden olu?turmayacak ve hiçbir veri kayb?na neden olmayacak.
#Genellikle, validate özelli?i üretim ortamlar?nda kullan?l?rken, update veya create özellikleri geli?tirme veya test ortamlar?nda kullan?l?r.
## Database config
logging.level.org.springframework.jdbc.core = TRACE
spring.jpa.properties.hibernate.format_sql =true
spring.jpa.properties.hibernate.show_sql=true


# ?nce create sonra  durdur update yap
# spring.jpa.hibernate.ddl-auto = create
#spring.jpa.hibernate.ddl-auto = create-drop
spring.jpa.hibernate.ddl-auto = update
#spring.jpa.hibernate.ddl-auto = validate

# H2DB
## Generic JNDI Data Source
#in Memory
#spring.datasource.url=jdbc:h2:mem:denemedb
# Directory on Disk
# spring.datasource.url=jdbc:h2:file:C:/data/denemedb
#Current User Directory
#spring.datasource.url=jdbc:h2:file:~/denemedb
##Current Working Directory

# http://localhost:8080/h2-console
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.url=jdbc:h2:file:./memory_persist/denemedb
#spring.datasource.username=root
#spring.datasource.password=root
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#spring.h2.console.enabled=true


## Mysql
##CREATE SCHEMA `denemedb` DEFAULT CHARACTER SET utf8 COLLATE utf8_turkish_ci ;
## use denemedb;
spring.datasource.url=jdbc:mysql://localhost:3306/denemedb?createDatabaseIfNotExist=true&autoReconnect=true&useSSL=false
spring.datasource.username=root
spring.datasource.password=123
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

## Postgresql
#CREATE DATABASE denemedb  WITH  OWNER = postgres  ENCODING = 'UTF8'  CONNECTION LIMIT = -1;
#spring.datasource.url=jdbc:postgresql://localhost:5432/denemedb
#spring.datasource.username=postgres
#spring.datasource.password=postgres
#spring.jpa.show-sql=true

## Postgresql (Docker )
#spring.datasource.url=jdbc:postgresql://postgresqldb:5432/denemedb
#spring.datasource.username=postgres
#spring.datasource.password=postgres
#spring.jpa.show-sql=true



# Oracle
#spring.datasource.url=jdbc:oracle:thin:@localhost:1521:orcl
#spring.datasource.username=system
#spring.datasource.password=Password123